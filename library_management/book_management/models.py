from django.db import models
from django.contrib.auth.models import User
from django.urls import reverse



class UserID(models.Model):
    USER_TYPE_CHOICES = [
        ('student', 'Student'),
        ('teacher', 'Teacher'),
    ]
    user=models.OneToOneField(User,on_delete=models.CASCADE)
    user_type = models.CharField(max_length=10, choices=USER_TYPE_CHOICES,default='teacher')


    def __str__(self):
        return self.user.username
    

class Books(models.Model):
    
    User_geners={
        ('action','Action'),
        ('adventure','Adventure'),
        ('crime','Crime'),
        ('suspense','Suspense')
    }

    id=models.AutoField(primary_key=True)
    Author=models.CharField(max_length=23)
    Name_Of_Book=models.CharField(max_length=50)
    Available=models.BooleanField(default=True,max_length=23)
    Geners=models.CharField(max_length=30,choices=User_geners,default='action')    
    
    def __str__(self) -> str:
        return self.Name_Of_Book
     

class BookRequest(models.Model):
    
    book_status={

        ('accepted','Accepted'),
        ('denied','Denied'),
        ('requested','Requested'),
        ('return','Returned'), 
    }
    book=models.ForeignKey(Books ,on_delete=models.CASCADE)
    generated_by=models.ForeignKey(User,on_delete=models.CASCADE,related_name='generated_by')
    
    generated_for=models.ForeignKey(User,on_delete=models.CASCADE,related_name='generated_for')
    status=models.CharField(max_length=30,choices=book_status,default='requested')
    
    def __str__(self) -> str:
        return f"{self.book.Name_Of_Book} - {self.status} (Generated by: {self.generated_by}, Generated for: {self.generated_for})"
    


class Sports(models.Model):
    sports_name =models.CharField(max_length=23)
    player_name=models.CharField(max_length=23)
    def __str__(self) -> str:
        return self.player_name
class men(models.Model):
    name=models.ForeignKey(Sports,on_delete=models.CASCADE)
    player_type=models.CharField(max_length=23,choices={('player','Player'),('coach','Coach')})
    def __str__(self) -> str:
        return f'{self.name}_____>{self.player_type}'